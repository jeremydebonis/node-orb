version: 2.1 # use CircleCI 2.1
jobs: # a collection of steps
  buildAndTest: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
        name: update-npm
        command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
        # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
        key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
        name: install-npm-wee
        command: npm install
      - save_cache: # special step to save the dependency cache
        key: dependency-cache-{{ checksum "package-lock.json" }}
        paths:
          - ./node_modules
      - run: # run tests
        name: test
        command: npm test
        
  pushToMaster:
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: echo "Git Push to master..."
      
  deployToProd:
    working_directory: ~/mern-starter # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10.16.3 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: echo "Deploy to production..."
     
# yaml anchor filters

features_filter: &features_filter
  branches:
    only: /feature-.*/

integration_filter: &integration_filter
  branches:
    only: integration

master_filter: &master_filter
  branches:
    only: master
  
workflows:
  feature-workflow:
    jobs:
      - buildAndTest:
        filters: *features_filter
    
  integration-workflow:
    jobs:
      - buildAndTest:
        filters: *integration_filter
      - pushToMaster:
        filters: *integration_filter
    
  master-workflow:
    jobs:
      - buildAndTest:
        filters: *master_filter    
      - deployToProd:
        filters: *master_filter
    
